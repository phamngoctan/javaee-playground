<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tanpham.javaee.playground.cdiplayground</groupId>
	<artifactId>cdi-beanmanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Java EE 7 Sample: cdi - beanmanager</name>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<arquillian.version>1.4.1.Final</arquillian.version>
		<java.min.version>1.7</java.min.version>
		<maven.min.version>3.0.0</maven.min.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.test.skip>false</maven.test.skip>
		<skipTests>false</skipTests>

		<!-- Application Server versions (these are downloaded and installed in 
			these versions by Maven for the CI profiles) -->
		<wildfly.swarm.version>2.4.0.Final</wildfly.swarm.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-container-test-api</artifactId>
				<version>${arquillian.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.197</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>

		<!-- The Java EE 7 API, which is the main and only API which this project 
			is providing samples for. -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies which can be used in sub-modules -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>${java.min.version}</source>
					<target>${java.min.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<aggregate>true</aggregate>
					<linkXRef>true</linkXRef>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<attachClasses>true</attachClasses>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>At least Maven in version ${maven.min.version} is
								required.</message>
							<version>${maven.min.version}</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>At least a JDK in version ${java.min.version} is
								required.</message>
							<version>${java.min.version}</version>
						</requireJavaVersion>
					</rules>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.0.2.Final</version>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M3</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>wildfly-swarm</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Client-cert needs complicated cert setup, which hasn't been done -->
				<skipServletClientCertificate>true</skipServletClientCertificate>
			</properties>

			<dependencies>
				<!-- Needed for websocket tests that use ContainerProvider.getWebSocketContainer() 
					to connect from a the client to the websocket server. -->
				<dependency>
					<groupId>io.undertow</groupId>
					<artifactId>undertow-websockets-jsr</artifactId>
					<version>1.4.0.Final</version>
					<scope>test</scope>
				</dependency>

				<!-- Needed for jaxrs tests that use ClientBuilder to connect from a 
					client to the JAX-RS server. -->
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-client</artifactId>
					<version>3.0.19.Final</version>
					<scope>test</scope>
				</dependency>

				<!-- Without this exception will be thrown about missing tracef method -->
				<dependency>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
					<version>3.3.0.Final</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-jaxb-provider</artifactId>
					<version>3.0.19.Final</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-json-p-provider</artifactId>
					<version>3.0.19.Final</version>
					<scope>test</scope>
				</dependency>

				<!-- The actual Arquillian container -->
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>arquillian</artifactId>
					<version>${wildfly.swarm.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<testResources>
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
					<testResource>
						<directory>src/test/resources-wildfly-swarm</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.xml>arquillian-swarm.xml</arquillian.xml>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<aggregate>true</aggregate>
					<linkXRef>true</linkXRef>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>